# vim:ft=yaml.ansible:
---
- hosts: all
  tasks:
    - name: Create temp build dir
      tempfile:
        state: directory
        suffix: archiso-build
      register: iso_build_temp_dir

    - set_fact:
        iso_build_dir: "{{ iso_build_temp_dir.path }}"
        # iso_build_dir: "<HARD CODE HERE FOR DEBUGING>"
    - set_fact:
        airootfs: "{{ iso_build_dir }}/airootfs"
    - set_fact:
        root_user_dir: "{{ airootfs }}/root"
    - set_fact:
        pacman_db_dest_dir: "{{ root_user_dir }}/pacman_dbs"

    - block:
        - name: Populate temp dir
          synchronize:
            src: /usr/share/archiso/configs/releng/
            dest: "{{ iso_build_dir }}"
            perms: false

        - name: Create pacman DB directory
          file:
            path: "{{ pacman_db_dest_dir }}"
            state: directory
        - name: Add pacman DBs to allow pre-networking package presence checks
          copy:
            src: "/var/lib/pacman/sync/{{ item }}"
            dest: "{{ pacman_db_dest_dir }}/{{ item }}"
          loop:
            - community.db
            - core.db
            - extra.db

        - name: Install network configuration
          import_tasks: tasks/network_configuration.yml
          vars:
            network_install_root: "{{ airootfs }}"

        - name: Install files into root user dir
          import_tasks: tasks/bootstrapping/install-user-files.yml
          become: true
          vars:
            user_home_dir: "{{ root_user_dir }}"
            ansible_dest_dir: "{{ root_user_dir }}/arch-ansible"
            user_name: root

        - name: Add pacakges
          lineinfile:
            dest: "{{ iso_build_dir }}/packages.x86_64"
            line: "{{ item }}"
          loop: "{{ bootstrap_packages }}"

        - name: Set permissions for live environment
          lineinfile:
            dest: "{{ iso_build_dir }}/profiledef.sh"
            line: "{{ item }}"
            insertafter: 'file_permissions=\('
          loop:
            - '["/root/arch-ansible/"]="0:0:0644"'
            - '["/root/arch-ansible/bin/"]="0:0:0755"'

        - name: Build ISO
          become: true
          command: "mkarchiso -v -w {{ iso_build_dir }}/work -o {{ iso_build_dir }}/out {{ iso_build_dir }}"
          args:
            creates: "{{ iso_build_dir }}/out/*.iso"
            chdir: "{{ iso_build_dir }}"

        - name: Inspect built images
          register: built_images
          find:
            paths: "{{ iso_build_dir }}/out"
            patterns: "*.iso"

        - name: Fail if there isn't exactly one image found
          when: built_images.matched != 1
          fail:
            msg: "Incorrect image file count in {{ iso_build_dir }}/out"

        - name: Write out ISO file
          become: true
          command: "dd bs=4M if={{ item.path }} of={{ iso_output_file }} oflag=sync"
          loop: "{{ built_images.files }}"

      always:
        - name: Cleanup
          become: true
          file:
            path: "{{ iso_build_dir }}"
            state: absent
