# vim:ft=yaml.ansible:
---
- hosts: all
  tasks:
    - set_fact:
        user_home_dir: "/home/{{ user.name }}"
    - set_fact:
        arch_ansible_dest: "{{ user_home_dir }}/src/arch-ansible"
    - set_fact:
        mounted_arch_ansible_dest: "{{ partitions['root'].mount_point }}{{ arch_ansible_dest }}"
    - set_fact:
        secrets_to_install:
          - src: secrets/gpg-keys/
            dest: "{{ user_home_dir }}/gpg-keys"
          - src: secrets/ssh-keys/
            dest: "{{ user_home_dir }}/.ssh"
          - src: secrets/vault-password
            dest: "{{ arch_ansible_dest }}/secrets/vault-password"

    - name: Copy over arch-ansible repo
      synchronize:
        src: "{{ playbook_dir }}/"
        dest: "{{ mounted_arch_ansible_dest }}"

    - name: Delete secrets out of arch-ansible copy
      file:
        path: "{{ item }}"
        state: absent
      with_fileglob:
        - "{{ mounted_arch_ansible_dest }}/secrets/*"

    - name: Switch back into chroot to fix file permissions
      set_fact:
        ansible_host: /mnt
        ansible_connection: chroot

    - name: Set permission on arch-ansible copy
      file:
        path: "{{ arch_ansible_dest }}"
        recurse: true
        mode: "0700"
        owner: "{{ user.name }}"
        group: "{{ user.group }}"

    - name: Create secrets destination directory
      file:
        path: "{{ arch_ansible_dest }}/secrets"
        state: directory
        mode: "0700"
        owner: "{{ user.name }}"
        group: "{{ user.group }}"

    - name: Install secrets
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ user.name }}"
        group: "{{ user.group }}"
        mode: "0600"
        directory_mode: "0700"
      loop: "{{ secrets_to_install }}"

    - name: Switch connection back to local for post-chroot tasks
      set_fact:
        ansible_host: "{{ original_hostname }}"
        ansible_connection: local
