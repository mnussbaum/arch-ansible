#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail

# Sourced from https://calbryant.uk/blog/how-to-get-the-best-out-of-your-yubikey-with-gpg
# Builds a GPG primary key and subkeys for exporting to yubikeys

if [ "$(ls)" ]; then
    echo "Must run in empty directory"
    exit 1
fi

NAME=$(git config --get user.name) || read -p "Name: " NAME
EMAIL=$(git config --get user.email) || read -p "Email: " EMAIL

echo "Name: $NAME"
echo "Email: $EMAIL"
read -s -p "Passphrase: " PASSPHRASE
echo

# Primary key
export GNUPGHOME="$(pwd)/gnupghome"
mkdir $GNUPGHOME
chmod 0700 $GNUPGHOME
cat <<EOF | gpg2 --batch --generate-key
    Key-Type: eddsa
    Key-Curve: ed25519
    Key-Usage: cert,sign
    Expire-Date: 0
    Name-Real: $NAME
    Name-Email: $EMAIL
    Passphrase: $PASSPHRASE
    %commit
EOF


FINGERPRINT=$(gpg2 --list-key $EMAIL | grep -oE '[A-Z0-9]{40}')

# Subkeys
echo "$PASSPHRASE" | gpg2 --pinentry-mode loopback \
  --batch --no-tty --yes --passphrase-fd 0 --quick-add-key $FINGERPRINT \
  cv25519 encrypt 0
echo "$PASSPHRASE" | gpg2 --pinentry-mode loopback \
  --batch --no-tty --yes --passphrase-fd 0 --quick-add-key $FINGERPRINT \
  ed25519 sign 0
echo "$PASSPHRASE" | gpg2 --pinentry-mode loopback \
  --batch --no-tty --yes --passphrase-fd 0 --quick-add-key $FINGERPRINT \
  ed25519 auth 0

gpg2 --list-keys
tar -C $GNUPGHOME --exclude='S.*' -cf gnupghome.tar .

gpg2 --export --armor > gpg-pubkeys.asc
gpg2 --export-ssh-key $EMAIL > ssh-pubkey.txt
echo $FINGERPRINT > gpg-fingerprint.txt
echo $FINGERPRINT | tail -c 17 > gpg-keyid.txt # includes /n -- (long) key id is last 16 chara
echo "$PASSPHRASE" | gpg2 --pinentry-mode loopback \
  --batch --no-tty --yes --passphrase-fd 0 --export-secret-key --armor \
  $EMAIL > gpg-privkeys.asc
