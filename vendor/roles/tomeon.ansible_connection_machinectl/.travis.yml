---
# Shiny!
dist: xenial

# Use full VM, as we need the ability to run containers in --privileged mode
sudo: required

# Just need to be able to run Docker (plus some shell scripts); everything else
# happens in containers.
language: minimal

env:
  global:
    - IMAGE=tomeon/fedora-mkosi:29-travis
    - CONTAINER="fedora-mkosi-29-travis-python-${TRAVIS_PYTHON_VERSION}"
    - TRAVIS_BUILD_DIR_BIND_DEST=/vagrant
  matrix:
    - ANSIBLE=2.4
    - ANSIBLE=2.5
    - ANSIBLE=2.6
    - ANSIBLE=2.7
    - ANSIBLE=2.8
    - ANSIBLE=2.9
    - ANSIBLE=2.10

services:
  - docker

before_install:
  - 'sudo "${TRAVIS_BUILD_DIR}/scripts/configure-docker"'
  - 'docker pull "$IMAGE"'
  - '"${TRAVIS_BUILD_DIR}/scripts/docker-run-travis-container" --name "$CONTAINER" "$IMAGE"'
  - 'docker exec "$CONTAINER" printenv | sort'
  - 'docker exec "$CONTAINER" "${TRAVIS_BUILD_DIR_BIND_DEST}/scripts/wait-is-system-running"'
  - 'docker exec "$CONTAINER" systemctl list-units "*machine*"'
  - 'docker exec "$CONTAINER" systemctl start systemd-machined'
  - 'docker exec "$CONTAINER" systemctl list-units "*machine*"'
  - 'docker exec "$CONTAINER" "${TRAVIS_BUILD_DIR_BIND_DEST}/scripts/resize-machine-btrfs-partition"'
  # Needed for creating a dummy TTY when running tests
  - 'docker exec "$CONTAINER" dnf -y install socat'

install:
  - 'docker exec "$CONTAINER" "${TRAVIS_BUILD_DIR_BIND_DEST}/scripts/download-images-and-spawn-containers"'

script:
  - 'docker exec "$CONTAINER" "${TRAVIS_BUILD_DIR_BIND_DEST}/scripts/run-tests" "$TRAVIS_BUILD_DIR_BIND_DEST"'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
