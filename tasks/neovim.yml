# vim:ft=yaml.ansible:
---
- set_fact:
    nvim_config_dir: "{{ user_config_dir }}/nvim"
    nvim_data_dir: "{{ user_data_dir }}/nvim"
    vim_plugins:
      - name: "wbthomason/packer.nvim"
      - name: "preservim/vimux"
      - name: "itchyny/lightline.vim"
      - name: "janko-m/vim-test"
      - name: "jlanzarotta/bufexplorer"
      - name: "liuchengxu/vista.vim"
      - name: "Matt-Deacalion/vim-systemd-syntax"
      - name: "m-pilia/vim-ccls"
      - name: "mhinz/vim-startify"
      - name: "pearofducks/ansible-vim"
      - name: "ryanoasis/vim-devicons"
      - name: "scrooloose/nerdtree"
      - name: "Shougo/context_filetype.vim"
      - name: "tpope/vim-fugitive"
      - name: "tyru/caw.vim"
      - name: "farmergreg/vim-lastplace"
      - name: "nvim-treesitter/nvim-treesitter"
        args:
          run: "function() require('nvim-treesitter.install').update({ with_sync = true }) end"
      - name: "neovim/nvim-lspconfig"
      - name: "hrsh7th/cmp-nvim-lsp"
      - name: "hrsh7th/cmp-buffer"
      - name: "hrsh7th/cmp-path"
      - name: "hrsh7th/cmp-cmdline"
      - name: "hrsh7th/nvim-cmp"
      - name: "RRethy/nvim-base16"
      - name: "mhartington/formatter.nvim"
    tree_sitter_plugins:
      - c
      - cpp
      - css
      - dockerfile
      - go
      - gomod
      - gowork
      - graphql
      - hcl
      - html
      - javascript
      - json
      - julia
      - lua
      - make
      - markdown
      - proto
      - python
      - ruby
      - rust
      - scss
      - sql
      - toml
      - typescript
      - vim
      - yaml
    tree_sitter_options:
      - name: highlight
    language_servers:
      - name: clangd
      - name: tsserver
      - name: gopls
      - name: pyright
      - name: solargraph
      - name: rust_analyzer
    language_formatters:
      go:
        - goimports
        - gofmt
      lua:
        - stylua
      html:
        - prettier
      javascript:
        - prettier
      json:
        - prettier
      markdown:
        - prettier
      python:
        - black
      ruby:
        - rubocop
      rust:
        - rustfmt
      typescript:
        - prettier
      yaml:
        - prettier
  tags: [base16]

- name: nvim | Ensure nvim config and data dirs exist
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
  with_items:
    - "{{ nvim_config_dir }}"
    - "{{ nvim_config_dir }}/lua"
    - "{{ nvim_config_dir }}/plugin"
    - "{{ nvim_data_dir }}"
    - "{{ nvim_data_dir }}/site/autoload"
    - "{{ nvim_data_dir }}/backups"

- name: nvim | Install neovim packages
  package:
    state: present
    name:
      - ansible-lint
      - clang
      - ctags
      - neovim
      - python-pynvim
      - yaml-language-server
      - vscode-json-languageserver
      - yarn
      - tree-sitter
      - stylua-bin
  become: true

- name: nvim | Install init.lua config
  copy:
    src: nvim/init.lua
    dest: "{{ nvim_config_dir }}/init.lua"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"

- name: nvim | Configure plugin list
  template:
    src: templates/nvim/plugins.lua.j2
    dest: "{{ nvim_config_dir }}/lua/plugins.lua"
    group: "{{ user.group }}"
    owner: "{{ user.name }}"
  register: plugin_config

- name: nvim | Install nvim plugins
  command: nvim --headless -n -c "autocmd User PackerComplete quitall" -c "PackerSync"
  when: plugin_config.changed

- name: nvim | Configure tree-sitter
  template:
    src: templates/nvim/tree-sitter.lua.j2
    dest: "{{ nvim_config_dir }}/lua/tree-sitter.lua"
    group: "{{ user.group }}"
    owner: "{{ user.name }}"
  register: tree_sitter_config

# This won't work until one of the following is resolved
# https://github.com/nvim-treesitter/nvim-treesitter/pull/2085
# https://github.com/nvim-treesitter/nvim-treesitter/issues/2900
# - name: nvim | Install tree-sitter plugins
#   command: nvim --headless -n -c "TSSyncInstall" -c "qa"
#   when: tree_sitter_config.changed

- name: nvim | Configure language servers
  template:
    src: templates/nvim/lsp.lua.j2
    dest: "{{ nvim_config_dir }}/lua/lsp.lua"
    group: "{{ user.group }}"
    owner: "{{ user.name }}"

- name: nvim | Configure formatters
  template:
    src: templates/nvim/formatters.lua.j2
    dest: "{{ nvim_config_dir }}/lua/formatters.lua"
    group: "{{ user.group }}"
    owner: "{{ user.name }}"

- name: nvim | Configure base16 colorscheme
  template:
    src: templates/nvim/nvim-base16.lua.j2
    dest: "{{ nvim_config_dir }}/lua/nvim-base16.lua"
    group: "{{ user.group }}"
    owner: "{{ user.name }}"
  tags: [base16]

- name: nvim | Install nvim file configs
  synchronize:
    src: files/nvim/lua/
    dest: "{{ nvim_config_dir }}/lua"

- name: nvim | Fix permission on nvim configs
  file:
    path: "{{ nvim_config_dir }}/lua"
    recurse: true
    owner: "{{ user.name }}"
    group: "{{ user.group }}"

- name: nvim | Install nvim template configs
  template:
    src: "{{ item }}"
    dest: "{{ nvim_config_dir }}/plugin/{{ item | basename | replace('.j2', '') }}"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
  tags: [base16]
  with_fileglob:
    - templates/nvim/plugin/*

- name: nvim | Generate base16-vim-lightline configs
  base16_builder:
    scheme: "{{ base16_scheme }}"
    scheme_family: "{{ base16_scheme_family }}"
    template: vim-lightline
    schemes_source: "{{ base16['schemes_source'] }}"
    templates_source: "{{ base16['templates_source'] }}"
  register: base16_lightline
  tags: [base16]

- name: nvim | Write base16-vim-lightline config to a file
  copy:
    content: "{{ base16_lightline['schemes'][base16_scheme]['vim-lightline']['autoload/lightline/colorscheme']['base16-' + base16_scheme + '.vim'] }}"
    dest: "{{ user_config_dir }}/nvim/plugin/base16-lightline.vim"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
  tags: [base16]
