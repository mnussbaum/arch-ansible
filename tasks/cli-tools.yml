# vim:ft=yaml.ansible:
---
# Split these into multiple groups to avoid sudo timeout on initial
# install
- name: CLI Tools | Install packages
  package:
    state: present
    name: "{{ item }}"
  retries: 2
  become: true
  loop:
    - - aws-cli
      - bat
      - bc
      - bfs
      - dnsutils
      - dstat
      - exa
      - expac
      - figlet
      - fwupd
      - fzf
    - - htop
      - hwinfo
      - imv
      - iotop
      - jq
      - lolcat
      - lsof
      - man-db
      - man-pages
      - meson
      - ncdu
      - net-tools
    - - openssh
      - ripgrep
      - ruby
      - strace
      - tig
      - unzip
      - vim
      - xdg-utils
      - yajl
      - zip

- name: CLI Tools | Install fzf helper scripts
  copy:
    dest: "/usr/local/bin/{{ item | basename }}"
    src: "{{ item }}"
    mode: a+x
  become: true
  with_fileglob:
    - files/fzf_helpers/*

- name: CLI Tools | Generate base16-fzf config
  base16_builder:
    scheme: "{{ base16_scheme }}"
    scheme_family: "{{ base16_scheme_family }}"
    template: fzf
    schemes_source: "{{ base16['schemes_source'] }}"
    templates_source: "{{ base16['templates_source'] }}"
  register: base16_fzf
  tags: [base16]

- name: CLI Tools | Write base16-fzf config to a file
  copy:
    content: "{{ base16_fzf['schemes'][base16_scheme]['fzf']['bash']['base16-' + base16_scheme + '.config'] }}"
    dest: "{{ user_config_dir }}/zsh/fzf-base16.zsh"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
  tags: [base16]

- name: CLI Tools | Create bat config dir
  become: true
  file:
    path: "{{ user_config_dir }}/bat"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"

- name: CLI Tools | Write bat config file
  copy:
    src: files/bat-config
    dest: "{{ user_config_dir }}/bat/config"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"

- name: CLI Tools | Create ripgrep config dir
  become: true
  file:
    path: "{{ user_config_dir }}/ripgrep"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"

- name: CLI Tools | Write ripgrep config file
  copy:
    src: files/ripgrep-config
    dest: "{{ user_config_dir }}/ripgrep/config"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
