# vim:ft=yaml.ansible:
---
- name: GPG | Install packages
  package:
    state: present
    name:
      - gnupg
      - imagemagick
      - pcsclite
      - qrencode
      - zbar
  become: true

- name: GPG | Create config dir
  file:
    path: "/home/{{ user.name }}/.gnupg"
    owner: "{{ user.name }}"
    mode: 0700
    state: directory

- name: GPG | Install config
  copy:
    dest: "/home/{{ user.name }}/.gnupg/gpg.conf"
    src: files/gpg.conf
    owner: "{{ user.name }}"
    mode: 0600

# This value is derived from my SSH key. If rotating keys rederive this value
# by empying the sshcontrol file and letting GPG repopulate it after `ssh-add`
- name: GPG | Install sshcontrol config
  copy:
    dest: "/home/{{ user.name }}/.gnupg/sshcontrol"
    content: "B72091CA763D99BC9A060A220F08763AC1836687 0\n\n"
    owner: "{{ user.name }}"
    mode: 0600

- name: GPG | Find gpg-agent user service configs
  find:
    paths: "/usr/share/doc/gnupg/examples/systemd-user"
    excludes: "README"
    recurse: no
  changed_when: false
  register: gpg_agent_service_configs

- name: GPG | Install gpg-agent user service configs
  copy:
    dest: "{{ user_config_dir }}/systemd/user/{{ item.path | basename }}"
    src: "{{ item.path }}"
    owner: "{{ user.name }}"
  with_items: "{{ gpg_agent_service_configs.files }}"

- name: GPG | Enable gpg-agent user services
  become: true
  become_user: "{{ user.name }}"
  systemd:
    enabled: true
    name: "{{ item.path | basename }}"
    scope: user
    daemon-reload: true
  with_items: "{{ gpg_agent_service_configs.files }}"

- name: GPG | Add backup/restore script
  copy:
    src: files/gpg-key-backup-restore
    dest: /usr/local/bin/gpg-key-backup-restore
    mode: a+x
  become: true
